extern crate ndarray;
extern crate ndarray_parallel;
extern crate num_traits;

use ndarray::{Array1, Array3, Axis, Zip};
use ndarray_parallel::prelude::*;
use std::error::Error;
use std::fmt;

#[derive(Debug)]
pub enum InterpError {
    Range,
    NoneArray,
}

impl fmt::Display for InterpError {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match *self {
            InterpError::Range => write!(f, "xi is not bound by x"),
            InterpError::NoneArray => write!(f, "Returned none when looking for data in x"),
        }
    }
}

impl Error for InterpError {
    fn description(&self) -> &str {
        match *self {
            InterpError::Range => "out of bounds",
            InterpError::NoneArray => "option is none",
        }
    }
}

pub fn lerp(
    x: &Array1<f32>,
    y: &Array1<f32>,
    xi: &Array1<f32>,
) -> Result<Array1<f32>, InterpError> {
    // This check takes about 10% of the time.
    let xf = x.into_iter().next().ok_or(InterpError::NoneArray)?;
    let xl = x.into_iter().last().ok_or(InterpError::NoneArray)?;
    if xi.iter().any(|xi| xi < xf || xi > xl) {
        return Err(InterpError::Range);
    }
    let mut output = Array1::<f32>::zeros(xi.len());
    Zip::from(&mut output).and(xi).par_apply(|output, &xi| {
        // We know xi is in range since we just checked, so unrwap is fine here
        let (x0, x1, y0, y1) = match x.iter().position(|xx| xx > &xi) {
            Some(idx) => (x[idx - 1], x[idx], y[idx - 1], y[idx]),
            None => {
                let idx = x.len() - 1;
                (x[idx - 1], x[idx], y[idx - 1], y[idx])
            }
        };
        *output = y0 + (xi - x0) * ((y1 - y0) / (x1 - x0));
    });
    Ok(output)
}

pub fn lerp_unchecked(x: &Array1<f32>, y: &Array1<f32>, xi: &Array1<f32>) -> Array1<f32> {
    let mut output = Array1::<f32>::zeros(xi.len());
    Zip::from(&mut output).and(xi).par_apply(|output, &xi| {
        // Note we don't check that xi is in x and could possibly panic here. So use with caution.
        let (x0, x1, y0, y1) = match x.iter().position(|xx| xx > &xi) {
            Some(idx) => (x[idx - 1], x[idx], y[idx - 1], y[idx]),
            None => {
                let idx = x.len() - 1;
                (x[idx - 1], x[idx], y[idx - 1], y[idx])
            }
        };
        *output = y0 + (xi - x0) * ((y1 - y0) / (x1 - x0));
    });
    output
}

/// Trilinear interpolation to resize an array.
/// i.e, if we have v.size = (50,50,50), and size = (100, 100, 100)
/// then the output will be (100,100,100) linearly interpolated
pub fn trilerp_resize(v: &Array3<f32>, size: (usize, usize, usize)) -> Array3<f32> {
    let nx = v.len_of(Axis(0)) - 1;
    let ny = v.len_of(Axis(1)) - 1;
    let nz = v.len_of(Axis(2)) - 1;

    // Set the basis
    let xi = Array1::linspace(0., nx as f32, size.0);
    let yi = Array1::linspace(0., ny as f32, size.1);
    let zi = Array1::linspace(0., nz as f32, size.2);

    let mut output = Array3::<f32>::zeros(size);
    let op = |c0, c1, d| c0 * (1. - d) + c1 * d;
    Zip::indexed(&mut output).par_apply(|(x, y, z), output| {
        // we need to find x,y,z values in the basis of v.
        let xlook = xi[x];
        let ylook = yi[y];
        let zlook = zi[z];
        //No need to bounds check this since we just built it. By construction
        //the value is here somewhere.
        let (x0, x1) = match (0..nx).position(|xx| xx as f32 > xlook) {
            Some(idx) => (idx - 1, idx),
            None => (nx - 1, nx),
        };
        let (y0, y1) = match (0..ny).position(|yy| yy as f32 > ylook) {
            Some(idx) => (idx - 1, idx),
            None => (ny - 1, ny),
        };
        let (z0, z1) = match (0..nz).position(|zz| zz as f32 > zlook) {
            Some(idx) => (idx - 1, idx),
            None => (nz - 1, nz),
        };

        // Calculate distances
        let xd = (xlook - x0 as f32) / (x1 as f32 - x0 as f32);
        let yd = (ylook - y0 as f32) / (y1 as f32 - y0 as f32);
        let zd = (zlook - z0 as f32) / (z1 as f32 - z0 as f32);

        // Interp over x
        let c00 = op(v[(x0, y0, z0)], v[(x1, y0, z0)], xd);
        let c01 = op(v[(x0, y0, z1)], v[(x1, y0, z1)], xd);
        let c10 = op(v[(x0, y1, z0)], v[(x1, y1, z0)], xd);
        let c11 = op(v[(x0, y1, z1)], v[(x1, y1, z1)], xd);

        // Interp over y
        let c0 = op(c00, c10, yd);
        let c1 = op(c01, c11, yd);

        // Interp over z
        *output = op(c0, c1, zd);
    });
    output
}

pub fn meshgrid(x: &mut Array1<f32>) -> (Array3<f32>, Array3<f32>, Array3<f32>) {
    let nx = x.len();

    let mut xx = Array3::<f32>::zeros((nx, nx, nx));
    let mut yy = Array3::<f32>::zeros((nx, nx, nx));
    let mut zz = Array3::<f32>::zeros((nx, nx, nx));

    for mut lane in xx.lanes_mut(Axis(0)).into_iter() {
        //TODO: There should be a nicer way to assign this.
        for (mut a, b) in lane.iter_mut().zip(x.iter()) {
            *a = *b;
        }
    }

    for mut lane in yy.lanes_mut(Axis(1)).into_iter() {
        for (mut a, b) in lane.iter_mut().zip(x.iter()) {
            *a = *b;
        }
    }

    for mut lane in zz.lanes_mut(Axis(2)).into_iter() {
        for (mut a, b) in lane.iter_mut().zip(x.iter()) {
            *a = *b;
        }
    }

    (xx, yy, zz)
}

#[cfg(test)]
mod tests {
    //extern crate serde;
    //extern crate serde_json;
    use super::*;
    use ndarray::{Array, Array3, arr3};
    use num_traits::float::Float;
    use std::f32::consts::PI;

    #[test]
    fn interp_1() {
        let x = Array::linspace(1., 10., 10);
        let y = Array::from_iter(x.into_iter().map(|x| x.sin()));
        let xi = Array::linspace(1., 10., 20);

        let yi = lerp(&x, &y, &xi).unwrap();
        assert_eq!(
            yi,
            Array::from_vec(vec![
                0.84147096,
                0.8735993,
                0.90572757,
                0.58585423,
                0.22198087,
                -0.18969359,
                -0.6150254,
                -0.8206304,
                -0.9163723,
                -0.7801062,
                -0.45823354,
                -0.08227807,
                0.36128092,
                0.70946646,
                0.8669055,
                0.9285964,
                0.655167,
                0.36179554,
                -0.09111279,
                -0.5440211,
            ])
        );
    }

    #[test]
    fn interp_1_unckecked() {
        let x = Array::linspace(1., 10., 10);
        let y = Array::from_iter(x.into_iter().map(|x| x.sin()));
        let xi = Array::linspace(1., 10., 20);

        let yi = lerp_unchecked(&x, &y, &xi);
        assert_eq!(
            yi,
            Array::from_vec(vec![
                0.84147096,
                0.8735993,
                0.90572757,
                0.58585423,
                0.22198087,
                -0.18969359,
                -0.6150254,
                -0.8206304,
                -0.9163723,
                -0.7801062,
                -0.45823354,
                -0.08227807,
                0.36128092,
                0.70946646,
                0.8669055,
                0.9285964,
                0.655167,
                0.36179554,
                -0.09111279,
                -0.5440211,
            ])
        );
    }

    #[test]
    fn trilinear_resize_shrink() {
        let n = 3.;
        let mut xn = Array::linspace(-n, n, 5);
        // Unsure if we'll inculde this in the library or not..
        let (x, y, z) = meshgrid(&mut xn);

        let mut v = Array3::<f32>::zeros((5, 5, 5));
        // Build a 3D gaussian of size (5,5,5).
        Zip::from(&mut v)
            .and(&x)
            .and(&y)
            .and(&z)
            .apply(|v, &x, &y, &z| {
                *v = 1000. / (2. * PI).sqrt()
                    * (-(x.powi(2) / 2.) - (y.powi(2) / 2.) - (z.powi(2) / 2.)).exp();
            });
        // Interpolate down to (3,3,3).
        let v_int = trilerp_resize(&v, (3, 3, 3));

        assert_eq!(
            v_int,
            arr3(&[
                [
                    [0.00054693356, 0.04923339, 0.00054693356],
                    [0.04923339, 4.4318485, 0.04923339],
                    [0.00054693356, 0.04923339, 0.00054693356]
                ],
                [
                    [0.04923339, 4.4318485, 0.04923339],
                    [4.4318485, 398.9423, 4.4318485],
                    [0.04923339, 4.4318485, 0.04923339]
                ],
                [
                    [0.00054693356, 0.04923339, 0.00054693356],
                    [0.04923339, 4.4318485, 0.04923339],
                    [0.00054693356, 0.04923339, 0.00054693356]
                ]
            ])
        );
    }

    #[test]
    fn trilinear_resize_grow() {
        let n = 3.;
        let mut xn = Array::linspace(-n, n, 5);
        // Unsure if we'll inculde this in the library or not..
        let (x, y, z) = meshgrid(&mut xn);

        let mut v = Array3::<f32>::zeros((5, 5, 5));
        // Build a 3D gaussian of size (5,5,5).
        Zip::from(&mut v)
            .and(&x)
            .and(&y)
            .and(&z)
            .apply(|v, &x, &y, &z| {
                *v = 1000. / (2. * PI).sqrt()
                    * (-(x.powi(2) / 2.) - (y.powi(2) / 2.) - (z.powi(2) / 2.)).exp();
            });
        // Interpolate up to (10,10,10).
        let v_int = trilerp_resize(&v, (10, 10, 10));

        assert_eq!(
            v_int,
            arr3(&[
                [
                    [
                        0.00054693356,
                        0.007407737,
                        0.014268541,
                        0.027066957,
                        0.041844577,
                        0.041844577,
                        0.027066953,
                        0.01426854,
                        0.0074077365,
                        0.00054693356
                    ],
                    [
                        0.007407737,
                        0.10033132,
                        0.1932549,
                        0.36659828,
                        0.56674826,
                        0.5667482,
                        0.36659825,
                        0.19325489,
                        0.100331314,
                        0.007407737
                    ],
                    [
                        0.014268541,
                        0.19325492,
                        0.3722413,
                        0.70612967,
                        1.0916519,
                        1.0916519,
                        0.70612955,
                        0.37224126,
                        0.1932549,
                        0.014268541
                    ],
                    [
                        0.027066957,
                        0.36659834,
                        0.70612967,
                        1.3395052,
                        2.0708284,
                        2.0708282,
                        1.339505,
                        0.7061296,
                        0.3665983,
                        0.027066957
                    ],
                    [
                        0.041844577,
                        0.56674826,
                        1.0916519,
                        2.0708284,
                        3.201429,
                        3.2014284,
                        2.070828,
                        1.0916519,
                        0.56674826,
                        0.041844577
                    ],
                    [
                        0.041844577,
                        0.5667482,
                        1.0916518,
                        2.0708282,
                        3.2014287,
                        3.2014282,
                        2.070828,
                        1.0916518,
                        0.5667482,
                        0.041844577
                    ],
                    [
                        0.027066953,
                        0.36659828,
                        0.70612955,
                        1.3395048,
                        2.070828,
                        2.0708277,
                        1.3395047,
                        0.7061295,
                        0.36659825,
                        0.027066953
                    ],
                    [
                        0.01426854, 0.1932549, 0.37224126, 0.7061296, 1.0916519, 1.0916519,
                        0.70612955, 0.37224123, 0.19325489, 0.01426854,
                    ],
                    [
                        0.0074077365,
                        0.100331314,
                        0.19325489,
                        0.36659825,
                        0.5667482,
                        0.5667482,
                        0.36659822,
                        0.19325487,
                        0.10033131,
                        0.0074077365
                    ],
                    [
                        0.00054693356,
                        0.007407737,
                        0.014268541,
                        0.027066957,
                        0.041844577,
                        0.041844577,
                        0.027066953,
                        0.01426854,
                        0.0074077365,
                        0.00054693356
                    ]
                ],
                [
                    [
                        0.007407737,
                        0.10033132,
                        0.1932549,
                        0.36659828,
                        0.56674826,
                        0.5667482,
                        0.36659825,
                        0.19325489,
                        0.100331314,
                        0.007407737
                    ],
                    [
                        0.10033132, 1.3589002, 2.617469, 4.965254, 7.67611, 7.6761093, 4.965253,
                        2.6174688, 1.3589001, 0.10033132,
                    ],
                    [
                        0.1932549, 2.617469, 5.041683, 9.563909, 14.785471, 14.78547, 9.563908,
                        5.0416827, 2.6174688, 0.1932549,
                    ],
                    [
                        0.36659828, 4.9652534, 9.563909, 18.142424, 28.04756, 28.047556, 18.142422,
                        9.563909, 4.9652534, 0.36659828,
                    ],
                    [
                        0.56674826, 7.67611, 14.785471, 28.047558, 43.360558, 43.36055, 28.047554,
                        14.78547, 7.6761093, 0.56674826,
                    ],
                    [
                        0.5667482, 7.676109, 14.785469, 28.047556, 43.36055, 43.360546, 28.047552,
                        14.785468, 7.6761084, 0.5667482,
                    ],
                    [
                        0.36659825, 4.9652534, 9.563909, 18.142422, 28.047554, 28.047552, 18.14242,
                        9.563908, 4.965253, 0.36659825,
                    ],
                    [
                        0.19325489, 2.617469, 5.041683, 9.563908, 14.785469, 14.785468, 9.563907,
                        5.0416827, 2.6174688, 0.19325489,
                    ],
                    [
                        0.100331314,
                        1.3589002,
                        2.617469,
                        4.965254,
                        7.6761093,
                        7.6761084,
                        4.965253,
                        2.6174688,
                        1.3589001,
                        0.100331314
                    ],
                    [
                        0.007407737,
                        0.10033132,
                        0.1932549,
                        0.36659828,
                        0.56674826,
                        0.5667482,
                        0.36659825,
                        0.19325489,
                        0.100331314,
                        0.007407737
                    ]
                ],
                [
                    [
                        0.014268541,
                        0.19325492,
                        0.3722413,
                        0.70612967,
                        1.0916519,
                        1.0916519,
                        0.70612955,
                        0.37224126,
                        0.1932549,
                        0.014268541
                    ],
                    [
                        0.19325492, 2.617469, 5.041683, 9.563908, 14.785469, 14.785468, 9.563907,
                        5.0416827, 2.6174688, 0.19325492,
                    ],
                    [
                        0.3722413, 5.0416837, 9.711125, 18.421688, 28.479286, 28.479284, 18.421684,
                        9.711124, 5.041683, 0.3722413,
                    ],
                    [
                        0.70612967, 9.563908, 18.421686, 34.945343, 54.02429, 54.02428, 34.945335,
                        18.421686, 9.563908, 0.70612967,
                    ],
                    [
                        1.0916519, 14.785471, 28.47929, 54.024292, 83.519684, 83.51967, 54.024284,
                        28.479288, 14.78547, 1.0916519,
                    ],
                    [
                        1.0916519, 14.785469, 28.479286, 54.024284, 83.51967, 83.51965, 54.024277,
                        28.479284, 14.785468, 1.0916519,
                    ],
                    [
                        0.70612955, 9.563907, 18.421684, 34.94534, 54.02428, 54.024273, 34.945335,
                        18.421684, 9.563907, 0.70612955,
                    ],
                    [
                        0.37224126, 5.041683, 9.711124, 18.421686, 28.479286, 28.479284, 18.421684,
                        9.711123, 5.0416827, 0.37224126,
                    ],
                    [
                        0.1932549, 2.6174688, 5.0416827, 9.563908, 14.785469, 14.785467, 9.563907,
                        5.0416822, 2.6174686, 0.1932549,
                    ],
                    [
                        0.014268541,
                        0.19325492,
                        0.3722413,
                        0.70612967,
                        1.0916519,
                        1.0916519,
                        0.70612955,
                        0.37224126,
                        0.1932549,
                        0.014268541
                    ]
                ],
                [
                    [
                        0.027066957,
                        0.36659834,
                        0.70612967,
                        1.3395052,
                        2.0708284,
                        2.0708282,
                        1.339505,
                        0.7061296,
                        0.3665983,
                        0.027066957
                    ],
                    [
                        0.36659834, 4.9652534, 9.563909, 18.142424, 28.04756, 28.047556, 18.142422,
                        9.563909, 4.9652534, 0.36659834,
                    ],
                    [
                        0.70612967, 9.563909, 18.421688, 34.945343, 54.02429, 54.024284, 34.945335,
                        18.421688, 9.563909, 0.70612967,
                    ],
                    [
                        1.3395052, 18.142424, 34.945343, 66.290184, 102.48233, 102.482315,
                        66.29018, 34.94534, 18.142422, 1.3395052,
                    ],
                    [
                        2.0708284, 28.047558, 54.02429, 102.48233, 158.43411, 158.43411,
                        102.482315, 54.024284, 28.047558, 2.0708284,
                    ],
                    [
                        2.0708282, 28.047554, 54.02428, 102.482315, 158.43411, 158.43408, 102.4823,
                        54.024277, 28.047552, 2.0708282,
                    ],
                    [
                        1.339505, 18.14242, 34.945335, 66.29018, 102.482315, 102.4823, 66.29016,
                        34.945335, 18.14242, 1.339505,
                    ],
                    [
                        0.7061296, 9.563908, 18.421686, 34.945343, 54.024284, 54.024277, 34.945335,
                        18.421686, 9.563908, 0.7061296,
                    ],
                    [
                        0.3665983, 4.9652534, 9.563909, 18.142422, 28.047554, 28.047552, 18.14242,
                        9.563908, 4.965253, 0.3665983,
                    ],
                    [
                        0.027066957,
                        0.36659834,
                        0.70612967,
                        1.3395052,
                        2.0708284,
                        2.0708282,
                        1.339505,
                        0.7061296,
                        0.3665983,
                        0.027066957
                    ]
                ],
                [
                    [
                        0.041844577,
                        0.56674826,
                        1.0916519,
                        2.0708284,
                        3.201429,
                        3.2014284,
                        2.070828,
                        1.0916519,
                        0.56674826,
                        0.041844577
                    ],
                    [
                        0.56674826, 7.6761107, 14.785473, 28.047562, 43.360558, 43.360554,
                        28.047558, 14.785472, 7.6761103, 0.56674826,
                    ],
                    [
                        1.0916519, 14.785472, 28.479292, 54.024296, 83.519684, 83.51968, 54.02429,
                        28.47929, 14.785471, 1.0916519,
                    ],
                    [
                        2.0708284, 28.047562, 54.024292, 102.48233, 158.43413, 158.43413,
                        102.482315, 54.02429, 28.047558, 2.0708284,
                    ],
                    [
                        3.201429, 43.360558, 83.519684, 158.43413, 244.93367, 244.93364, 158.43411,
                        83.51968, 43.360554, 3.201429,
                    ],
                    [
                        3.2014284, 43.36055, 83.51967, 158.43411, 244.93362, 244.9336, 158.43408,
                        83.51966, 43.360546, 3.2014284,
                    ],
                    [
                        2.070828, 28.047556, 54.024284, 102.482315, 158.4341, 158.43408, 102.4823,
                        54.02428, 28.047554, 2.070828,
                    ],
                    [
                        1.0916519, 14.785471, 28.47929, 54.024292, 83.519684, 83.51967, 54.024284,
                        28.479288, 14.78547, 1.0916519,
                    ],
                    [
                        0.56674826, 7.6761107, 14.785473, 28.047562, 43.360558, 43.36055,
                        28.047558, 14.785472, 7.6761103, 0.56674826,
                    ],
                    [
                        0.041844577,
                        0.56674826,
                        1.0916519,
                        2.0708284,
                        3.201429,
                        3.2014284,
                        2.070828,
                        1.0916519,
                        0.56674826,
                        0.041844577
                    ]
                ],
                [
                    [
                        0.041844577,
                        0.5667482,
                        1.0916518,
                        2.0708282,
                        3.2014287,
                        3.2014282,
                        2.070828,
                        1.0916518,
                        0.5667482,
                        0.041844577
                    ],
                    [
                        0.5667482, 7.676109, 14.785469, 28.047556, 43.36055, 43.360546, 28.047552,
                        14.785468, 7.6761084, 0.5667482,
                    ],
                    [
                        1.0916518, 14.78547, 28.479288, 54.024284, 83.51968, 83.51966, 54.024277,
                        28.479286, 14.785469, 1.0916518,
                    ],
                    [
                        2.0708282, 28.047554, 54.02428, 102.482315, 158.43411, 158.43408, 102.4823,
                        54.024277, 28.047552, 2.0708282,
                    ],
                    [
                        3.2014287, 43.360554, 83.51968, 158.43413, 244.93367, 244.93364, 158.43411,
                        83.51967, 43.36055, 3.2014287,
                    ],
                    [
                        3.2014282, 43.360546, 83.51966, 158.4341, 244.93362, 244.9336, 158.43407,
                        83.51965, 43.360542, 3.2014282,
                    ],
                    [
                        2.070828, 28.04755, 54.024273, 102.4823, 158.43408, 158.43407, 102.482285,
                        54.02427, 28.047548, 2.070828,
                    ],
                    [
                        1.0916518, 14.785469, 28.479286, 54.024284, 83.51967, 83.51965, 54.024277,
                        28.479284, 14.785468, 1.0916518,
                    ],
                    [
                        0.5667482, 7.676109, 14.785469, 28.047556, 43.36055, 43.360542, 28.047552,
                        14.785468, 7.6761084, 0.5667482,
                    ],
                    [
                        0.041844577,
                        0.5667482,
                        1.0916518,
                        2.0708282,
                        3.2014287,
                        3.2014282,
                        2.070828,
                        1.0916518,
                        0.5667482,
                        0.041844577
                    ]
                ],
                [
                    [
                        0.027066953,
                        0.36659828,
                        0.70612955,
                        1.3395048,
                        2.070828,
                        2.0708277,
                        1.3395047,
                        0.7061295,
                        0.36659825,
                        0.027066953
                    ],
                    [
                        0.36659828, 4.9652534, 9.563909, 18.142422, 28.047554, 28.047552, 18.14242,
                        9.563908, 4.965253, 0.36659828,
                    ],
                    [
                        0.70612955, 9.563908, 18.421686, 34.94534, 54.02428, 54.024273, 34.945335,
                        18.421686, 9.563908, 0.70612955,
                    ],
                    [
                        1.3395048, 18.14242, 34.945335, 66.29018, 102.482315, 102.4823, 66.29016,
                        34.945335, 18.14242, 1.3395048,
                    ],
                    [
                        2.070828, 28.047552, 54.024277, 102.482315, 158.43411, 158.43408, 102.4823,
                        54.024273, 28.04755, 2.070828,
                    ],
                    [
                        2.0708277, 28.04755, 54.024273, 102.4823, 158.43408, 158.43407, 102.482285,
                        54.02427, 28.047548, 2.0708277,
                    ],
                    [
                        1.3395047, 18.142418, 34.94533, 66.29016, 102.48229, 102.48228, 66.29015,
                        34.94533, 18.142418, 1.3395047,
                    ],
                    [
                        0.7061295, 9.563907, 18.421684, 34.945335, 54.02428, 54.024273, 34.94533,
                        18.421684, 9.563907, 0.7061295,
                    ],
                    [
                        0.36659825, 4.965253, 9.563908, 18.142422, 28.047552, 28.04755, 18.142418,
                        9.563907, 4.9652524, 0.36659825,
                    ],
                    [
                        0.027066953,
                        0.36659828,
                        0.70612955,
                        1.3395048,
                        2.070828,
                        2.0708277,
                        1.3395047,
                        0.7061295,
                        0.36659825,
                        0.027066953
                    ]
                ],
                [
                    [
                        0.01426854, 0.1932549, 0.37224126, 0.7061296, 1.0916519, 1.0916519,
                        0.70612955, 0.37224123, 0.19325489, 0.01426854,
                    ],
                    [
                        0.1932549, 2.6174688, 5.0416827, 9.563908, 14.785469, 14.785467, 9.563907,
                        5.0416822, 2.6174686, 0.1932549,
                    ],
                    [
                        0.37224126, 5.041683, 9.711124, 18.421686, 28.479286, 28.479284, 18.421684,
                        9.711123, 5.0416827, 0.37224126,
                    ],
                    [
                        0.7061296, 9.563908, 18.421686, 34.945343, 54.02429, 54.02428, 34.945335,
                        18.421686, 9.563908, 0.7061296,
                    ],
                    [
                        1.0916519, 14.785471, 28.47929, 54.024292, 83.519684, 83.51967, 54.024284,
                        28.479288, 14.78547, 1.0916519,
                    ],
                    [
                        1.0916519, 14.785469, 28.479286, 54.024284, 83.51967, 83.51965, 54.024277,
                        28.479284, 14.785468, 1.0916519,
                    ],
                    [
                        0.70612955, 9.563907, 18.421684, 34.945335, 54.024277, 54.024273, 34.94533,
                        18.421682, 9.563906, 0.70612955,
                    ],
                    [
                        0.37224123, 5.0416822, 9.711123, 18.421686, 28.479286, 28.479284,
                        18.421684, 9.7111225, 5.0416822, 0.37224123,
                    ],
                    [
                        0.19325489, 2.6174686, 5.0416822, 9.563908, 14.785469, 14.785467, 9.563906,
                        5.0416822, 2.6174686, 0.19325489,
                    ],
                    [
                        0.01426854, 0.1932549, 0.37224126, 0.7061296, 1.0916519, 1.0916519,
                        0.70612955, 0.37224123, 0.19325489, 0.01426854,
                    ]
                ],
                [
                    [
                        0.0074077365,
                        0.100331314,
                        0.19325489,
                        0.36659825,
                        0.5667482,
                        0.5667482,
                        0.36659822,
                        0.19325487,
                        0.10033131,
                        0.0074077365
                    ],
                    [
                        0.100331314,
                        1.3589001,
                        2.6174688,
                        4.965254,
                        7.67611,
                        7.676109,
                        4.965253,
                        2.6174688,
                        1.3589001,
                        0.100331314
                    ],
                    [
                        0.19325489, 2.617469, 5.041683, 9.563909, 14.785471, 14.78547, 9.563908,
                        5.0416827, 2.6174688, 0.19325489,
                    ],
                    [
                        0.36659825, 4.9652534, 9.563909, 18.142424, 28.04756, 28.047556, 18.142422,
                        9.563909, 4.9652534, 0.36659825,
                    ],
                    [
                        0.5667482, 7.67611, 14.785471, 28.047558, 43.360554, 43.360546, 28.047554,
                        14.78547, 7.6761093, 0.5667482,
                    ],
                    [
                        0.5667482, 7.676109, 14.785469, 28.047556, 43.36055, 43.360542, 28.047552,
                        14.785468, 7.6761084, 0.5667482,
                    ],
                    [
                        0.36659822, 4.965253, 9.563908, 18.142422, 28.047552, 28.04755, 18.142418,
                        9.563907, 4.9652524, 0.36659822,
                    ],
                    [
                        0.19325487, 2.6174688, 5.0416827, 9.563908, 14.785469, 14.785467, 9.563907,
                        5.0416822, 2.6174684, 0.19325487,
                    ],
                    [
                        0.10033131, 1.3589, 2.6174686, 4.9652534, 7.6761093, 7.6761084, 4.9652524,
                        2.6174686, 1.3589, 0.10033131,
                    ],
                    [
                        0.0074077365,
                        0.100331314,
                        0.19325489,
                        0.36659825,
                        0.5667482,
                        0.5667482,
                        0.36659822,
                        0.19325487,
                        0.10033131,
                        0.0074077365
                    ]
                ],
                [
                    [
                        0.00054693356,
                        0.007407737,
                        0.014268541,
                        0.027066957,
                        0.041844577,
                        0.041844577,
                        0.027066953,
                        0.01426854,
                        0.0074077365,
                        0.00054693356
                    ],
                    [
                        0.007407737,
                        0.10033132,
                        0.1932549,
                        0.36659828,
                        0.56674826,
                        0.5667482,
                        0.36659825,
                        0.19325489,
                        0.100331314,
                        0.007407737
                    ],
                    [
                        0.014268541,
                        0.19325492,
                        0.3722413,
                        0.70612967,
                        1.0916519,
                        1.0916519,
                        0.70612955,
                        0.37224126,
                        0.1932549,
                        0.014268541
                    ],
                    [
                        0.027066957,
                        0.36659834,
                        0.70612967,
                        1.3395052,
                        2.0708284,
                        2.0708282,
                        1.339505,
                        0.7061296,
                        0.3665983,
                        0.027066957
                    ],
                    [
                        0.041844577,
                        0.56674826,
                        1.0916519,
                        2.0708284,
                        3.201429,
                        3.2014284,
                        2.070828,
                        1.0916519,
                        0.56674826,
                        0.041844577
                    ],
                    [
                        0.041844577,
                        0.5667482,
                        1.0916518,
                        2.0708282,
                        3.2014287,
                        3.2014282,
                        2.070828,
                        1.0916518,
                        0.5667482,
                        0.041844577
                    ],
                    [
                        0.027066953,
                        0.36659828,
                        0.70612955,
                        1.3395048,
                        2.070828,
                        2.0708277,
                        1.3395047,
                        0.7061295,
                        0.36659825,
                        0.027066953
                    ],
                    [
                        0.01426854, 0.1932549, 0.37224126, 0.7061296, 1.0916519, 1.0916519,
                        0.70612955, 0.37224123, 0.19325489, 0.01426854,
                    ],
                    [
                        0.0074077365,
                        0.100331314,
                        0.19325489,
                        0.36659825,
                        0.5667482,
                        0.5667482,
                        0.36659822,
                        0.19325487,
                        0.10033131,
                        0.0074077365
                    ],
                    [
                        0.00054693356,
                        0.007407737,
                        0.014268541,
                        0.027066957,
                        0.041844577,
                        0.041844577,
                        0.027066953,
                        0.01426854,
                        0.0074077365,
                        0.00054693356
                    ]
                ]
            ])
        );
    }
}
